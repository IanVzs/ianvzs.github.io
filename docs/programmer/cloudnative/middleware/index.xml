<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>中间件 on Ian's Blog</title><link>http://example.org/docs/programmer/cloudnative/middleware/</link><description>Recent content in 中间件 on Ian's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://example.org/docs/programmer/cloudnative/middleware/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://example.org/docs/programmer/cloudnative/middleware/kafka-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/cloudnative/middleware/kafka-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>常用命令 # 创建topic # sh kafka-console-producer.sh --create --topic scanner_device_log --bootstrap-server localhost:9092 --partitions 0 --replication-factor 1 发送接收测试 # sh kafka-console-producer.sh --broker-list localhost:9092 --topic test sh kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test 单机部署 # 本文链接🔗 Kafka是一个开源的分布式消息引擎/消息中间件，同时Kafka也是一个流处理平台。Kakfa支持以发布/订阅的方式在应用间传递消息，同时并基于消息功能添加了Kafka Connect、Kafka Streams以支持连接其他系统的数据(Elasticsearch、Hadoop等) Kafka在生产环境下使用通常是集群化部署的，同时也要依赖ZooKeeper集群，这对开发测试环境来说比较重，不过我们可以通过Docker便捷Kafka单机的方式，节省部署时间以及机器资源
1、本文主要内容 # 通过Docker手动部署ZooKeeper&amp;amp;Kafka 通过Docker Compose快捷部署ZooKeeper&amp;amp;Kafka Kafka发送、接收消息测试 2、本文环境信息 # 工具 说明 适配 Docker Docker CE 23.0.5 Docker CE Docker Desktop 4.19.0 4.0.x ZooKeeper zookeeper:3.8（Docker Image ） zookeeper:3.x（Docker Image ） Kafka wurstmeister/kafka:2.13-2.8.1（Docker Image） wurstmeister/kafka:2.x（Docker Image） 二、手动部署Kafka # 1、拉取镜像 # 先通过docker pull 命令把镜像拉取下来，方便后续操作</description></item></channel></rss>