<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>平台 on Ian's Blog</title><link>http://example.org/docs/programmer/platforms/</link><description>Recent content in 平台 on Ian's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/docs/programmer/platforms/index.xml" rel="self" type="application/rss+xml"/><item><title>逆向三板斧</title><link>http://example.org/docs/programmer/platforms/%E9%80%86%E5%90%91/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/%E9%80%86%E5%90%91/</guid><description>突然想起它: [[noteOfjava]]
三板斧 - apktool # https://apktool.org/docs/install/#linux
java -jar apktool.jar d -f -o outputDir yourApp.apk // 或 ./apktool d -f -o outputDir yourApp.apk 文件目录说明:
目录/文件名 用途 内容 original 保存 Apktool 无法直接处理的原始文件 AndroidManifest.xml 和签名信息目录 META-INF res 包含应用程序的资源文件 drawable (图片资源), layout (布局文件), values (字符串等), menu (菜单定义), xml (其他 XML 资源) smali 包含反编译后的字节码文件 .smali 文件，每个对应一个 Java 类的方法 assets 存放原始文件资源，不经编译处理 音频、视频、HTML、字体等文件 lib 存放 native 库（.so 文件） 不同平台架构的 .so 文件 AndroidManifest.xml 应用的清单文件，定义应用名称、包名、版本、权限等 XML 格式的配置信息 apktool.yml Apktool 的配置文件，存储解码和重建参数 框架版本、资源位置、编码设置等 注意事项： 修改资源或代码后，使用 Apktool 重新打包 APK。 确保遵守法律法规和使用协议。 Smali 是一种用于 Android 应用程序的DEX（Dalvik Executable）文件的汇编语言。它是DEX代码的反汇编表示，类似于Java的字节码。Smali 语法具有特定的结构和规则，以下是一些基本概念和语法：</description></item><item><title>Steam</title><link>http://example.org/docs/programmer/platforms/os/steam/</link><pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/steam/</guid><description>双人成行 # Win上存档位置： /Users/{user name}/AppData/Local/ItTakesTwo Linux Steam 存档位置: ~/.steam/steam/steamapps/compatdata/3097223920/pfx/drive_c/users/steamuser/AppData/Local/ItTakesTwo$ 说明 # ~/.steam/steam/steamapps/compatdata/为steam porton统一虚拟环境位置 3097223920为steam为每个游戏都创建一个独立的环境 pfx/drive_c/users/steamuser这些就是windows下的存储路径了, steamuser为默认用户名pfx表示私有存储空间？大概
2686703063 - GTAV</description></item><item><title>Linux 跑安卓</title><link>http://example.org/docs/programmer/platforms/android/waydroid/</link><pubDate>Mon, 01 Jul 2024 09:56:41 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/android/waydroid/</guid><description>Waydroid # 安装 # sudo apt install curl ca-certificates curl https://repo.waydro.id | sudo bash sudo apt install waydroid 配置 # sudo http_proxy=&amp;#34;http://127.0.0.1:7890&amp;#34; https_proxy=&amp;#34;http://127.0.0.1:7890&amp;#34; waydroid init sudo systemctl stop waydroid-container sudo /usr/bin/python3 /usr/bin/waydroid -w container start sudo systemctl start waydroid-container sudo systemctl status waydroid-container ARM兼容层 # git clone https://github.com/casualsnek/waydroid_script cd waydroid_script python -m pip install -r requirements.txt # 建议用虚拟环境哈～ python main.py install libhoudini 配置页面 # https://docs.waydro.id/usage/waydroid-prop-options
解决app检测网络问题 # 包名通配
waydroid prop set persist.</description></item><item><title>Ubuntu</title><link>http://example.org/docs/programmer/platforms/os/ubuntu/</link><pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/ubuntu/</guid><description>一、Snap # 如果Ubuntu有问题,那么很有可能是因为Snap
Firefox # 在升级Ubuntu 24.04后内存占用极为不正常, 多次排查无果, 增加了交换空间还是没有治本, 几经排查终于发现是firefox的问题, 且是Snap的firefox的问题,所以手动下载别的版本后修改如下:
修改/usr/bin/firefox中的最一开始的监测安装和运行为自行下载软件路径 添加gnome favorite-apps 1. 添加Firefox到Favorites（喜爱应用） # 打开终端（Ctrl + Alt + T）。 输入以下命令来查看当前的喜爱应用列表： gsettings get org.gnome.shell favorite-apps 这会输出当前的喜爱应用列表 3. 如果没有看到 firefox.desktop 在列表中，可以使用以下命令将它添加进去,这个命令会将 firefox.desktop 添加到喜爱应用列表的末尾。：
gsettings set org.gnome.shell favorite-apps &amp;#34;$(gsettings get org.gnome.shell favorite-apps | sed &amp;#34;s/]/, &amp;#39;firefox.desktop&amp;#39;]/&amp;#34;)&amp;#34; 2. 检查.desktop文件是否正确 # 确保 firefox.desktop 文件存在并且正确配置。通常，它应该位于 /usr/share/applications/ 目录或者在Snap安装中可能位于 /var/lib/snapd/desktop/applications/ 目录。你可以使用 ls 命令检查这些位置是否有相关的 .desktop 文件：
ls /usr/share/applications/firefox.desktop ls /var/lib/snapd/desktop/applications/firefox_firefox.desktop # 如果是通过Snap安装的Firefox` 3. 更新缓存和重启(可选) - 我用的 [[#^bef1ba]] # 如果以上步骤没有解决问题，尝试更新GNOME的缓存并重新启动GNOME Shell：</description></item><item><title>阿里云使用</title><link>http://example.org/docs/programmer/platforms/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BD%BF%E7%94%A8/</guid><description>oss 对象存储 # Python SDK # pip install oss2 export OSS_ACCESS_KEY_ID=SIHDoisdhuasuiUGDS export OSS_ACCESS_KEY_SECRET=asdih213asHSIDH2e1 一、Auth # import oss2 from oss2.credentials import EnvironmentVariableCredentialsProvider from itertools import islice auth = oss2.ProviderAuth(EnvironmentVariableCredentialsProvider()) 二、Bucket # bucket_info 字段说明 # 字段 type 注释 {bucket_info.name} Bucket的名称 {bucket_info.storage_class} Bucket的存储类型 {bucket_info.creation_date} Bucket的创建时间 {bucket_info.intranet_endpoint} Bucket的内网Endpoint {bucket_info.extranet_endpoint} Bucket的外网Endpoint {bucket_info.owner.id} Bucket的拥有者ID {bucket_info.acl.grant} Bucket的ACL授权 {bucket_info.data_redundancy_type} Bucket的数据冗余类型 {bucket_info.access_monitor} Bucket的访问跟踪状态 代码示例 # # 查看Bucket service = oss2.Service(auth, &amp;#39;oss-ap-xiaomengmai-1.aliyuncs.com&amp;#39;) for b in oss2.BucketIterator(service): print(b.name) # bucket信息 bucket = oss2.</description></item><item><title>WPS for Linux</title><link>http://example.org/docs/programmer/platforms/wps-for-linux/</link><pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/wps-for-linux/</guid><description> wps 在linux上打开提示字体缺失 # wps 在linux上打开提示字体缺失 # git clone https://github.com/dv-anomaly/ttf-wps-fonts cd ttf-wps-fonts &amp;amp;&amp;amp; sudo ./install.sh</description></item><item><title>AppsFlyer-外网移动归因营销分析平台</title><link>http://example.org/docs/programmer/platforms/appsflyer/</link><pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/appsflyer/</guid><description> AppsFlyer # SDK集成 # Gradle、dependency 添加Android Install Referrer 到App 通过app权限准确化归因 应用内事件 # 注册 购买 广告点击 分享 邀请 唤醒 跳转 # OpenLink平台归因 跳转 深度链接</description></item><item><title>安装问题</title><link>http://example.org/docs/programmer/platforms/install_some/</link><pubDate>Sat, 15 Jan 2022 16:24:41 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/install_some/</guid><description>记录一些安装问题 # Debian 使用 apt-add-repository(ppa) # sudo apt update sudo apt install software-properties-common FreeBSD桌面 # 换源 pkg install xorg xfce echo &amp;lsquo;dbus_enable=&amp;ldquo;YES&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/rc.conf echo &amp;ldquo;/usr/local/etc/xdg/xfce4/xinitrc&amp;rdquo; &amp;gt; ~/.xinitrc startx 登录界面 # pkg install slim slim-themes echo &amp;lsquo;slim_enable=&amp;ldquo;YES&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/rc.conf vbox(没测试) # pkg install virtualbox-ose-additions 向/etc/rc.conf写入 vboxguest_enable=&amp;#34;YES&amp;#34; vboxservice_enable=&amp;#34;YES&amp;#34; 仅供参考看这里 因为vbox显卡太弱安装了vmware后就一直没用回过vbox,我还没测试过
vmware # pkg install open-vm-tools xf86-video-vmware xf86-input-vmmouse 继续向/etc/rc.conf中写入 hald_enable=&amp;#34;YES&amp;#34; moused_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmblock_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmhgfs_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmmemctl_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmxnet_enable=&amp;#34;YES&amp;#34; # vmware_guest_enable=&amp;#34;YES&amp;#34; 下面注释掉的是因为在测试中如果打开的话会有各种问题&amp;hellip;.</description></item><item><title>安卓</title><link>http://example.org/docs/programmer/platforms/android/android/</link><pubDate>Tue, 15 May 2018 09:56:41 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/android/android/</guid><description>将安卓手机用于开发 # Termux # 类似于WIN端的Subsystem——其实更像Ubuntu下的虚拟终端。 不过这东西功能强大，除了将安卓里的Linux发挥出来。还有Termux API来调用手机的底层接口。
XFCE4 # 步骤：
安装Termux 执行pkg update 执行pkg install git &amp;amp;&amp;amp; git clone https://github.com/Yisus7u7/termux-desktop-xfce.git 执行cd termux-desktop-xfce &amp;amp;&amp;amp; bash boostrap.sh 当然，3&amp;amp;4步可以合并为一句curl -sLf https://raw.githubusercontent.com/Yisus7u7/termux-desktop-xfce/main/boostrap.sh | bash
VNC # 默认VNC只能通过localhost:1来连接，局域网不能访问。想用大屏来看就不是很方便。
# 先执行`vncserver`使用本机的`VNC Viewer`看看效果，主要是需要先设置一下密码 vncserver # 现在还无法通过局域网连接 # 去设置 cd ~/.vnc/ vim config # 打开最后一行注释 # 重新运行 vncserver -kill :1 vncserver 配置文件一览 # 将config文件最后一行的注释打开，即可
## Supported server options to pass to vncserver upon invocation can be listed ## in this file.</description></item><item><title>FreeBSD</title><link>http://example.org/docs/programmer/platforms/os/freebsd/</link><pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/freebsd/</guid><description>FreeBSD # 桌面 # 换源 pkg install xorg xfce echo &amp;lsquo;dbus_enable=&amp;ldquo;YES&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/rc.conf echo &amp;ldquo;/usr/local/etc/xdg/xfce4/xinitrc&amp;rdquo; &amp;gt; ~/.xinitrc startx 登录界面 # pkg install slim slim-themes echo &amp;lsquo;slim_enable=&amp;ldquo;YES&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/rc.conf vbox(没测试) # pkg install virtualbox-ose-additions 向/etc/rc.conf写入 vboxguest_enable=&amp;#34;YES&amp;#34; vboxservice_enable=&amp;#34;YES&amp;#34; 仅供参考看这里 因为vbox显卡太弱安装了vmware后就一直没用回过vbox,我还没测试过
vmware # pkg install open-vm-tools xf86-video-vmware xf86-input-vmmouse 继续向/etc/rc.conf中写入 hald_enable=&amp;#34;YES&amp;#34; moused_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmblock_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmhgfs_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmmemctl_enable=&amp;#34;YES&amp;#34; # vmware_guest_vmxnet_enable=&amp;#34;YES&amp;#34; # vmware_guest_enable=&amp;#34;YES&amp;#34; 下面注释掉的是因为在测试中如果打开的话会有各种问题&amp;hellip;.尤其鼠标 其他可见这里参考 =&amp;gt; 该Blog仅供参考, 这里面的东西很多都是有问题的.
换源 # mkdir -p /usr/local/etc/pkg/repos vim /usr/local/etc/pkg/repos/bjtu.</description></item><item><title>Linux 笔记</title><link>http://example.org/docs/programmer/platforms/os/note-of-linux/</link><pubDate>Fri, 08 Apr 2016 16:58:56 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/note-of-linux/</guid><description>git fetch &amp;ndash;all git reset &amp;ndash;hard origin/master git pull 交换分区 # 大小推荐 # 物理内存 交换分区（SWAP） &amp;lt;= 4G 至少4G 4~16G 至少8G 16G~64G 至少16G 64G~256G 至少32G 调节操作 # # 查看命令相关 sudo swapo swapoff swapon # 关闭现有的交换分区 sudo swapoff /swapfile # 查看效果 htop # 预支出一块儿空地 sudo fallocate -l 16G /swapfile du -sh /swapfile # 设置权限 防止误操作 sudo chmod 600 /swapfile # 整上 sudo mkswap /swapfile mkswap: /swapfile：警告，将擦除旧的 swap 签名。 正在设置交换空间版本 1，大小 = 16 GiB (17179865088 个字节) 无标签， UUID=6de8b5e1-bdc3-4e7b-98c9-6801126fcb0b # 开!</description></item><item><title>adb</title><link>http://example.org/docs/programmer/platforms/android/adb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/android/adb/</guid><description> 常规 # adb connect 127.0.0.1:34534 adb devices adb -s 192.168.240.112:5555 shell
app操作 # 查看已经安装的app # adb shell pm list packages
打开某app # adb shell monkey -p com.example.myapp -c android.intent.category.LAUNCHER 1 通过adb输入文字 # 在界面选中的输入框内输入文字
input text &amp;#34;{输入文字}&amp;#34;</description></item><item><title>Git</title><link>http://example.org/docs/programmer/platforms/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/git/</guid><description> Git # 1. 同步远端放弃本地 # git fetch --all git reset --hard origin/master git pull Windows下问题 # [[Problem of Windows#Windows下Git问题]]
2. git 项目由 Ext4 -&amp;gt; NTFS 复制后 # 文件权限发生变化, Git追踪文件权限的话会标记所有文件都需要修改 因为在Linux 下文件权限为 -rw-r--r--（所有者可读写，其他用户只读）,但是Linux下挂载NTFS文件权限为 -rwxr-xr-x（所有者可读、写、执行，其他用户可读、执行）就很难受
git config core.filemode false # 关闭github监控文件权限</description></item><item><title>ROS机器人操作系统</title><link>http://example.org/docs/programmer/platforms/os/ros/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/ros/</guid><description>Robot OS # http://www.autolabor.com.cn/book/ROSTutorials/</description></item><item><title>Windows 爬坑记</title><link>http://example.org/docs/programmer/platforms/os/problem-of-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/os/problem-of-windows/</guid><description> Windows下Git问题 # Linux没啥问题,但在Win下报checkout失败,路径问题 git config core.protectNTFS false Win 开机问题 # 按下Shift+F10或者是Fn+Shift+F10快捷键调出命令提示符窗口。 输入以下指令文本：OOBE\BYPASSNRO 等待重启, 再次操作来到联网界面. &amp;ldquo;下一步&amp;quot;按钮旁会多出一个&amp;quot;我没有internet连接&amp;quot;的选项, 点击该选项</description></item><item><title>解决问题记录笔记</title><link>http://example.org/docs/programmer/platforms/tips-of-problems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/platforms/tips-of-problems/</guid><description>各种一键问题解决方案 # Windows下Git问题 # Linux没啥问题,但在Win下报checkout失败,路径问题 git config core.protectNTFS false docker - supervisord 禁用日志文件或使用 logfile=/dev/stdout # from: https://www.coder.work/article/100835 标签 docker supervisord
[supervisord] nodaemon=true logfile=/dev/stdout pidfile=/var/run/supervisord.pid childlogdir=/var/log/supervisor 当我这样做时，这个主管会崩溃，因为它无法在/dev/stdout 中寻找
如何禁用 supervisord 在我的 docker 容器中创建任何日志文件？
最佳答案
对于主主管，nodaemon 将导致日志转到 stdout
[supervisord] nodaemon=true logfile=/dev/null logfile_maxbytes=0 然后将每个托管进程的日志发送到标准输出文件描述符/dev/fd/1
[program:x] command=echo test stdout_logfile=/dev/fd/1 stdout_logfile_maxbytes=0 redirect_stderr=true 或者，如果您希望将 stderr 保留在不同的流上:
[program:x] command=echo test stdout_logfile=/dev/fd/1 stdout_logfile_maxbytes=0 stderr_logfile=/dev/fd/2 stderr_logfile_maxbytes=0 关于docker - supervisord 禁用日志文件或使用 logfile=/dev/stdout，我们在Stack Overflow上找到一个类似的问题： https://stackoverflow.com/questions/45645758/
docker中执行sed报Device or resource busy错误的处理原因及方式 转载 # kuSorZ 博主文章分类：Linux 文章标签: docker | sed 文章分类: Docker 原文出处： https://www.</description></item></channel></rss>