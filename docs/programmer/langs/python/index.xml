<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Ian's Blog</title><link>http://example.org/docs/programmer/langs/python/</link><description>Recent content in Python on Ian's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 31 Mar 2022 15:15:14 +0000</lastBuildDate><atom:link href="http://example.org/docs/programmer/langs/python/index.xml" rel="self" type="application/rss+xml"/><item><title>PyPi使用说明</title><link>http://example.org/docs/programmer/langs/python/pypi/</link><pubDate>Thu, 31 Mar 2022 15:15:14 +0000</pubDate><guid>http://example.org/docs/programmer/langs/python/pypi/</guid><description>Pypi包管理 # 示例项目 # py-muti-scrcpy
配置文件 # pyproject
工具介绍 # poetry
增加安装包 # 直接修改pyproject.toml文件并不能生效, 因为还依赖于poetry.lock
可使用poetry add {xxx}进行添加
注意事项 # 需要链接外网 # HTTPSConnectionPool(host=&amp;#39;files.pythonhosted.org&amp;#39;, port=443): Max retries exceeded with url: /packages/17/61/32c3ab8951142e061587d957226b5683d1387fb22d95b4f69186d92616d1/typing_extensions-4.0.0-py3-none-any.whl (Caused by ProxyError(&amp;#39;Cannot connect to proxy.&amp;#39;, ConnectionResetError(54, &amp;#39;Connection reset by peer&amp;#39;))) HTTPSConnectionPool(host=&amp;#39;pypi.org&amp;#39;, port=443): Max retries exceeded with url: /pypi/colorama/0.4.4/json (Caused by ProxyError(&amp;#39;Cannot connect to proxy.&amp;#39;, ConnectionResetError(54, &amp;#39;Connection reset by peer&amp;#39;))) 需要安装ssl # SSLError HTTPSConnectionPool(host=&amp;#39;pypi.org&amp;#39;, port=443): Max retries exceeded with url: /pypi/importlib-metadata/4.</description></item><item><title/><link>http://example.org/docs/programmer/langs/python/paramiko-%E4%BD%BF%E7%94%A8-sshsftp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/langs/python/paramiko-%E4%BD%BF%E7%94%A8-sshsftp/</guid><description>没啥好说的, 直接看代码:
import os import gzip import shutil import paramiko import multiprocessing from pathlib import Path from loguru import logger from config import globalconf class SSHConnection(object): def __init__(self, host=None, port=None, username=None, pwd=None, pk_path=None): &amp;#34;&amp;#34;&amp;#34; :param host: 服务器ip :param port: 接口 :param username: 登录名 :param pwd: 密码 &amp;#34;&amp;#34;&amp;#34; self.host = host self.port = port self.username = username self.pwd = pwd self.pk_path = pk_path def __enter__(self): self.connect() return self def __exit__(self, exc_type, exc_val, exc_tb): self.</description></item><item><title/><link>http://example.org/docs/programmer/langs/python/pytest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/langs/python/pytest/</guid><description>[TOC]
命令 # Django 整合进 pytest测试 # pip install pytest-django pytest -s -vv .\tests\test_step2.py --rootdir X:\Code\workflows\ --ds project.settings rootdir 指定项目根目录 ds 指向django setting.py 文件 一、为什么需要pytest # helps you write better programs
提高阅读理解代码效率 提高debug效率 提高开发效率 保证交付代码质量 简单例子 # 入门例子:
了解使用test文件命名格式: test_前缀 了解断言assert 了解测试输出 # content of test_sample.py def inc(x): return x + 1 def test_answer(): assert inc(3) == 5 输出
$ pytest =========================== test session starts ============================ platform linux -- Python 3.</description></item><item><title>笔记</title><link>http://example.org/docs/programmer/langs/python/notespython/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/langs/python/notespython/</guid><description>author:Ian
彻底摆脱to_dict和from_dict # 使用 pydantic # BaseModel类型支持:
b = BattleAxiePositionInfo.parse_obj(DICT_DATA) b.json() b.dict() parse_file parse_raw from pydantic import BaseModel class PositionInfo(BaseModel): error: int = -1 # 收集错误 none: int = 0 # 还没开始 clicked: int = 1 # 在client 赋此值 done: int = 2 # 在server 赋此值 xy: List[int] = [0, 0] status: int = 0 # clicked or done or none or error class BattleAxiePositionInfo(BaseModel): our: List[PositionInfo] = [PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo()] enemy: List[PositionInfo] = [PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo(), PositionInfo()] pp = BattleAxiePositionInfo() print(f&amp;#34;pp json: {pp.</description></item></channel></rss>