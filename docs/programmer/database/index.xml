<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ian's Blog</title><link>http://example.org/docs/programmer/database/</link><description>Recent content on Ian's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Aug 2024 09:51:09 +0000</lastBuildDate><atom:link href="http://example.org/docs/programmer/database/index.xml" rel="self" type="application/rss+xml"/><item><title>数据库-MariaDB篇</title><link>http://example.org/docs/programmer/database/note-of-db-data-mariadb/</link><pubDate>Sun, 25 Aug 2024 09:51:09 +0000</pubDate><guid>http://example.org/docs/programmer/database/note-of-db-data-mariadb/</guid><description> MariaDB数据库 📊 # 一、安装 # Docker Run # You need to specify one of MARIADB_ROOT_PASSWORD, MARIADB_ROOT_PASSWORD_HASH, MARIADB_ALLOW_EMPTY_ROOT_PASSWORD and MARIADB_RANDOM_ROOT_PASSWORD
docker run -p 3306:3306 --name mariadb11 -e MARIADB_ROOT_PASSWORD=mrp1234 mariadb:11</description></item><item><title>Dgraph使用小记</title><link>http://example.org/docs/programmer/database/dgraph-graph-db/</link><pubDate>Mon, 10 Jan 2022 17:00:00 +0000</pubDate><guid>http://example.org/docs/programmer/database/dgraph-graph-db/</guid><description>概念 # 以下参考自: 这里 Console # Mutate: 突变, 结构/数据变化的时候用 Query: 查询, Emmmm查询的时候用 所以看来没有getset了???? Schema # 管理字段(Predicate, Type, list,lang,index等)
问题 # 在新手村的时候使用dgraph/standalone 但此时(2021-12-8 18:30:23)文档使用的版本为dgraph/standalone:v21.03.2但是这个版本的Ratel UI不工作&amp;hellip;. 导致hello 不了 world很是难受
结果换了dgraph/standalone:v20.11.3好了诶.
sudo docker run --rm -it -p &amp;#34;8080:8080&amp;#34; -p &amp;#34;9080:9080&amp;#34; -p &amp;#34;8000:8000&amp;#34; -v ~/dgraph:/dgraph &amp;#34;dgraph/standalone:v20.11.3&amp;#34; http://127.0.0.1:8000 突变 # set # 内容较多, 下面单独罗列
delete # 根据UID 删除指定predicate_name
{ delete { &amp;lt;UID&amp;gt; &amp;lt;predicate_name&amp;gt; * . } } set # 创建 # 直接json给出结构和数据,即可完成创建.只不过如果有用到@lang时就需要去Schema里更新一下字段 - 类型 ?</description></item><item><title>数据库-MongoDB篇</title><link>http://example.org/docs/programmer/database/note-of-db-data-mongodb/</link><pubDate>Tue, 15 May 2018 09:51:09 +0000</pubDate><guid>http://example.org/docs/programmer/database/note-of-db-data-mongodb/</guid><description>DB数据库 🖥 📊🖥 # MongoDB笔记 # 学习网站：http://www.runoob.com/mongodb/mongodb-tutorial.html (其学习教程还挺可观，很多，不过还不清楚好不好)
安装 # Docker 安装 4.4.12版本 # pull: docker pull mongo:4.4.13 run: docker run -itd --name mongo --restart=always \ -v /mongodb/datadb:/data/db \ -p 27017:27017 \ --network websafe-network \ --privileged=true mongo:4.4.12 进入容器docker exec -it mongo bash后:
mongo use admin # db.createUser({user: &amp;#34;admin&amp;#34;, pwd: &amp;#34;admin&amp;#34;, roles: [{role: &amp;#34;root&amp;#34;, db: &amp;#34;admin&amp;#34;}]}) # db.createUser({user: &amp;#34;admin&amp;#34;, pwd: &amp;#34;admin&amp;#34;, roles: [{role: &amp;#34;userAdminAnyDatabase&amp;#34;, db: &amp;#34;admin&amp;#34;}]}) # 如果能auth就不用createUser了 db.auth(&amp;#34;admin&amp;#34;, &amp;#34;admin&amp;#34;) 网上传的将 MONGO_INITDB_ROOT_PASSWORD 和 MONGO_INITDB_ROOT_USERNAME传入环境变量的方式，在mongo4.</description></item><item><title>数据库-MySQL篇</title><link>http://example.org/docs/programmer/database/note-of-db-data-mysql/</link><pubDate>Tue, 15 May 2018 09:51:09 +0000</pubDate><guid>http://example.org/docs/programmer/database/note-of-db-data-mysql/</guid><description>MySQL数据库 🖥 📊🖥 # 安装 # docker # podman run -d --name mysql-container -e MYSQL_ROOT_PASSWORD={my-secret-pw} -e MYSQL_TIME_ZONE=UTC -e MYSQL_CHARSET=utf8 -p 3306:3306 mysql:5.7 使用 # 常用命令 # CREATE DATABASE {database_name} DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci; 按天统计 # SELECT DATE(created_at) AS date, COUNT(*) AS count FROM `TABLE_NAME` WHERE created_at &amp;gt;= &amp;#34;2025-01-01&amp;#34; AND created_at &amp;lt; &amp;#34;2025-02-01&amp;#34; GROUP BY DATE(created_at) ORDER BY date LIMIT 100 连接 # 使用MySQL命令行工具连接MySQL时，你可以使用以下命令来：
启用压缩传输 # mysql --compress -u username -p 完整命令如：</description></item></channel></rss>